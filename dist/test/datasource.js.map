{"version":3,"sources":["../../src/datasource.js"],"names":["HawkularDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","headers","jsonData","tenant","basicAuth","length","token","typeResources","variablesHelper","capabilitiesPromise","queryVersion","then","version","queryProcessor","options","validTargets","targets","filter","target","hide","map","sanitizeTarget","id","undefined","tags","tagsQL","when","data","promises","run","all","flatten","responses","sort","m1","m2","localeCompare","stats","rate","seriesAggFn","raw","timeAggFn","datasourceRequest","method","response","status","message","title","metricIds","resolve","annotation","query","start","range","from","valueOf","end","to","order","ids","allAnnotations","metrics","forEach","metric","annot","time","dp","timestamp","text","value","push","key","hasOwnProperty","replace","join","resolveForQL","result","m","tag","params","substr","findTags","trim","charAt","runWithResolvedVariables","p","pattern","flatTags","property","concat","func","resolved","catch"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport {VariablesHelper} from './variablesHelper';\nimport {Capabilities} from './capabilities';\nimport {QueryProcessor} from './queryProcessor';\nimport {modelToString as tagsModelToString} from './tagsKVPairsController';\n\nexport class HawkularDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.headers = {\n      'Content-Type': 'application/json',\n      'Hawkular-Tenant': instanceSettings.jsonData.tenant\n    };\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    } else if (typeof instanceSettings.jsonData.token === 'string' && instanceSettings.jsonData.token.length > 0) {\n      this.headers['Authorization'] = 'Bearer ' + instanceSettings.jsonData.token;\n    }\n    this.typeResources = {\n      \"gauge\": \"gauges\",\n      \"counter\": \"counters\",\n      \"availability\": \"availability\"\n    };\n    this.variablesHelper = new VariablesHelper(templateSrv);\n    this.capabilitiesPromise = this.queryVersion().then(version => new Capabilities(version));\n    this.queryProcessor = new QueryProcessor($q, backendSrv, this.variablesHelper, this.capabilitiesPromise, this.url, this.headers, this.typeResources);\n  }\n\n  query(options) {\n    const validTargets = options.targets\n      .filter(target => !target.hide)\n      .map(this.sanitizeTarget)\n      .filter(target => target.id !== undefined\n         || (target.tags !== undefined && target.tags.length > 0)\n         || (target.tagsQL !== undefined && target.tagsQL.length > 0));\n\n    if (validTargets.length === 0) {\n      return this.q.when({data: []});\n    }\n\n    const promises = validTargets.map(target => this.queryProcessor.run(target, options));\n\n    return this.q.all(promises)\n      .then(responses => ({data: _.flatten(responses).sort((m1, m2) => m1.target.localeCompare(m2.target))}));\n  }\n\n  sanitizeTarget(target) {\n    // Create sane target, providing backward compatibility\n    if (target.id === undefined && target.target !== 'select metric') {\n      target.id = target.target;\n    } else if (target.id === '-- none --') {\n      delete target.id;\n    }\n    delete target.target;\n    target.stats = target.stats || [];\n    target.type = target.type || 'gauge';\n    target.rate = target.rate === true;\n    target.tags = target.tags || [];\n    target.tagsQL = target.tagsQL || '';\n    target.seriesAggFn = target.seriesAggFn || 'none';\n    if (target.raw === undefined) {\n      // Compatibility note: previously default was timeAggFn=avg and seriesAggFn=none\n      if (target.seriesAggFn === 'none' && target.timeAggFn === 'avg') {\n        delete target.timeAggFn;\n      }\n      target.raw = (target.timeAggFn === undefined);\n    }\n    return target;\n  }\n\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/metrics',\n      method: 'GET',\n      headers: this.headers\n    }).then(response => {\n      if (response.status === 200 || response.status === 204) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      } else {\n        return { status: \"error\", message: \"Connection failed (\" + response.status + \")\", title: \"Error\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    const metricIds = this.variablesHelper.resolve(options.annotation.query, options);\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/strings/raw/query',\n      data: {\n        start: options.range.from.valueOf(),\n        end: options.range.to.valueOf(),\n        order: 'ASC',\n        ids: metricIds\n      },\n      method: 'POST',\n      headers: this.headers\n    }).then(response => response.status == 200 ? response.data : [])\n    .then(metrics => {\n      let allAnnotations = [];\n      metrics.forEach(metric => {\n        metric.data.forEach(dp => {\n          let annot = {\n            annotation: options.annotation,\n            time: dp.timestamp,\n            title: options.annotation.name,\n            text: dp.value\n          };\n          let tags = [];\n          if (metricIds.length > 1) {\n            tags.push(metric.id);\n          }\n          if (dp.tags) {\n            for (let key in dp.tags) {\n              if (dp.tags.hasOwnProperty(key)) {\n                tags.push(dp.tags[key].replace(' ', '_'));\n              }\n            }\n          }\n          if (tags.length > 0) {\n            annot.tags = tags.join(' ');\n          }\n          allAnnotations.push(annot);\n        });\n      });\n      return allAnnotations;\n    });\n  }\n\n  suggestQueries(target) {\n    let url = this.url + '/metrics?type=' + target.type;\n    if (target.tagsQL && target.tagsQL.length > 0) {\n      url += \"&tags=\" + this.variablesHelper.resolveForQL(target.tagsQL, {});\n    } else if (target.tags && target.tags.length > 0) {\n      url += \"&tags=\" + tagsModelToString(target.tags, this.variablesHelper, {});\n    }\n    return this.backendSrv.datasourceRequest({\n      url: url,\n      method: 'GET',\n      headers: this.headers\n    }).then(response => response.status == 200 ? response.data : [])\n    .then(result => {\n      return result.map(m => m.id)\n        .sort()\n        .map(id => {\n          return {text: id, value: id};\n        });\n    });\n  }\n\n  suggestTags(type, key) {\n    if (!key) {\n      return this.q.when([]);\n    }\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/' + this.typeResources[type] + '/tags/' + key + ':*',\n      method: 'GET',\n      headers: this.headers\n    }).then(result => result.data.hasOwnProperty(key) ? result.data[key] : [])\n    .then(tags => tags.map(tag => {\n      return {text: tag, value: tag};\n    }));\n  }\n\n  suggestTagKeys(type) {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/metrics/tags',\n      method: 'GET',\n      headers: this.headers\n    }).then(response => response.status == 200 ? response.data : [])\n    .then(result => result.map(key => ({text: key, value: key})));\n  }\n\n  metricFindQuery(query) {\n    let params = \"\";\n    if (query !== undefined) {\n      if (query.substr(0, 5) === \"tags/\") {\n        return this.findTags(query.substr(5).trim());\n      }\n      if (query.charAt(0) === '?') {\n        params = query;\n      } else {\n        params = \"?\" + query;\n      }\n    }\n    return this.runWithResolvedVariables(params, p => this.backendSrv.datasourceRequest({\n      url: this.url + '/metrics' + p,\n      method: 'GET',\n      headers: this.headers\n    }).then(result => {\n      return _.map(result.data, metric => {\n        return {text: metric.id, value: metric.id};\n      });\n    }));\n  }\n\n  findTags(pattern) {\n    return this.runWithResolvedVariables(pattern, p => this.backendSrv.datasourceRequest({\n      url: this.url + '/metrics/tags/' + p,\n      method: 'GET',\n      headers: this.headers\n    }).then(result => {\n      let flatTags = [];\n      if (result.data) {\n        let data = result.data;\n        for (let property in data) {\n          if (data.hasOwnProperty(property)) {\n            flatTags = flatTags.concat(data[property]);\n          }\n        }\n      }\n      return flatTags.map(tag => {\n        return {text: tag, value: tag};\n      });\n    }));\n  }\n\n  runWithResolvedVariables(target, func) {\n    const resolved = this.variablesHelper.resolve(target, {});\n    return this.q.all(resolved.map(p => func(p)))\n      .then(result => _.flatten(result));\n  }\n\n  queryVersion() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/status',\n      method: 'GET',\n      headers: {'Content-Type': 'application/json'}\n    }).then(response => response.data['Implementation-Version'])\n    .catch(response => \"Unknown\");\n  }\n\n  getCapabilities() {\n    return this.capabilitiesPromise;\n  }\n}\n"]}