{"version":3,"sources":["../../src/query_ctrl.js"],"names":["HawkularDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","$q","scope","caps","datasource","getCapabilities","then","TAGS_QUERY_LANGUAGE","tagsController","target","FETCH_ALL_TAGS","tagsSegments","initTagsSegments","metricTypes","value","text","seriesAggFns","timeAggFns","type","id","rate","tags","tagsQL","seriesAggFn","timeAggFn","segment","$index","getTagsSegments","tagsSegmentChanged","onChangeInternal","suggestQueries","concat","metrics","transformToSegments","panelCtrl","refresh","rawTagsQuery","err","console","log","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\nimport {Capabilities} from './capabilities';\nimport {TagsKVPairsController} from './tagsKVPairsController';\nimport {TagsQLController} from './tagsQLController';\n\nexport class HawkularDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv, $q)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.$q = $q;\n\n    this.caps = new Capabilities(\"\");\n    this.datasource.getCapabilities().then(caps => {\n      this.caps = caps;\n      if (caps.TAGS_QUERY_LANGUAGE) {\n        this.tagsController = new TagsQLController(uiSegmentSrv, this.datasource, $q, () => this.target);\n      } else {\n        this.tagsController = new TagsKVPairsController(uiSegmentSrv, this.datasource, $q, caps.FETCH_ALL_TAGS, () => this.target);\n      }\n      this.tagsSegments = this.tagsController.initTagsSegments();\n    });\n\n    this.metricTypes = [\n      {value: 'gauge', text: 'Gauge'},\n      {value: 'counter', text: 'Counter'},\n      {value: 'availability', text: 'Availability'}\n    ];\n    this.seriesAggFns = [\n      {value: 'none', text: 'None'},\n      {value: 'sum', text: 'Sum'},\n      {value: 'avg', text: 'Average'}\n    ];\n    this.timeAggFns = [\n      {value: 'avg', text: 'Average'},\n      {value: 'min', text: 'Min'},\n      {value: 'max', text: 'Max'},\n      {value: 'live', text: 'Live'}\n    ];\n\n    this.target.type = this.target.type || this.metricTypes[0].value;\n    // backward compatibility: check target.target\n    this.target.id = this.target.id || this.target.target || '-- none --';\n    delete this.target.target;\n    this.target.rate = this.target.rate === true;\n    this.target.tags = this.target.tags || [];\n    this.target.tagsQL = this.target.tagsQL || \"\";\n    this.target.seriesAggFn = this.target.seriesAggFn || this.seriesAggFns[0].value;\n    this.target.timeAggFn = this.target.timeAggFn || this.timeAggFns[0].value;\n  }\n\n  getTagsSegments(segment, $index) {\n    return this.tagsController.getTagsSegments(this.tagsSegments, segment, $index);\n  }\n\n  tagsSegmentChanged(segment, $index) {\n    this.tagsController.tagsSegmentChanged(this.tagsSegments, segment, $index);\n    this.onChangeInternal();\n  }\n\n  getMetricOptions() {\n    return this.datasource.suggestQueries(this.target)\n      .then(metrics => [{value: '-- none --', text: '-- none --'}].concat(metrics))\n      .then(this.uiSegmentSrv.transformToSegments(false));\n      // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n  }\n\n  onChangeInternal() {\n    if (this.target.type == 'availability') {\n      // Disable multiple series aggregation\n      this.target.seriesAggFn = this.seriesAggFns[0].value;\n    }\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  toggleEditorMode() {\n    if (this.caps.TAGS_QUERY_LANGUAGE) {\n      this.target.rawTagsQuery = !this.target.rawTagsQuery;\n      if (!this.target.rawTagsQuery) {\n        try {\n          this.tagsSegments = this.tagsController.initTagsSegments();\n        } catch (err) {\n          this.target.rawTagsQuery = true;\n          console.log('Cannot parse query: ' + err);\n        }\n      }\n    } else {\n      this.target.rawTagsQuery = false;\n    }\n  }\n}\n\nHawkularDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}